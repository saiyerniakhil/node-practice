{"version":3,"sources":["../../Downloads/part2-notes-part2-6/src/components/Note.js","../../Downloads/part2-notes-part2-6/src/components/Notification.js","../../Downloads/part2-notes-part2-6/src/services/notes.js","../../Downloads/part2-notes-part2-6/src/App.js","../../Downloads/part2-notes-part2-6/src/index.js"],"names":["Note","_ref","note","toggleImportance","label","important","react_default","a","createElement","className","content","onClick","Notification","message","services_notes","request","axios","get","nonExisting","id","date","then","response","data","concat","newObject","post","put","Footer","style","color","fontStyle","fontSize","App","_useState","useState","_useState2","Object","slicedToArray","notes","setNotes","_useState3","_useState4","newNote","setNewNote","_useState5","_useState6","showAll","setShowAll","_useState7","_useState8","errorMessage","setErrorMessage","useEffect","noteService","initialNotes","notesToShow","filter","toggleImportanceOf","find","n","changedNote","objectSpread","returnedNote","map","catch","error","setTimeout","components_Notification","components_Note","key","onSubmit","event","preventDefault","noteObject","Date","toISOString","Math","random","length","value","onChange","target","type","App_Footer","ReactDOM","render","src_App","document","getElementById"],"mappings":"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","file":"static/js/main.7f8d8d94.chunk.js","sourcesContent":["import React from 'react'\n\nconst Note = ({ note, toggleImportance }) => {\n  const label = note.important\n    ? 'make not important' : 'make important'\n\n  return (\n    <li className=\"note\">\n      {note.content}\n      <button onClick={toggleImportance}>{label}</button>\n    </li>\n  )\n}\n\nexport default Note","import React from 'react'\n\nconst Notification = ({message}) => {\n    if(message == null) {\n        return null\n    }\n    return (\n        <div className=\"error\">\n            {message}\n        </div>\n    )\n}\n\nexport default Notification","import axios from 'axios'\nconst baseUrl = '/notes'\n\nconst getAll = () => {\n  const request = axios.get(baseUrl)\n  const nonExisting = {\n    id: 10000,\n    content: 'This note is not saved to server',\n    date: '2019-05-30T17:30:31.098Z',\n    important: true,\n  }\n  return request.then(response => response.data.concat(nonExisting))\n}\n\nconst create = newObject => {\n  const request = axios.post(baseUrl, newObject)\n  return request.then(response => response.data)\n}\n\nconst update = (id, newObject) => {\n  const request = axios.put(`${baseUrl}/${id}`, newObject)\n  return request.then(response => response.data)\n}\n\nexport default { getAll, create, update }","import React, { useState, useEffect } from 'react'\nimport Note from './components/Note'\nimport Notification from './components/Notification'\nimport axios from 'axios'\nimport noteService from './services/notes' \n\nconst Footer = () => {\n  const footerStyle = {\n    color : 'green',\n    fontStyle: 'italic',\n    fontSize: 16\n  }\n  return (\n    <div style={footerStyle}>\n    <br/>\n    <en>Note app, created by Akhil, Sathyabama Inst. Of Science and Technology</en>\n    </div>  \n  )\n}\n\nconst App = () => {\n  const [notes, setNotes] = useState([]) \n  const [newNote, setNewNote] = useState('') \n  const [showAll, setShowAll] = useState(true)\n  const [errorMessage, setErrorMessage] = useState('some error happened...')\n\n  useEffect(() => {\n    noteService\n      .getAll()\n      .then(initialNotes => setNotes(initialNotes))\n  }, [])\n\n  const notesToShow = showAll\n    ? notes\n    : notes.filter(note => note.important)\n\n  const rows = () => notesToShow.map(note =>\n    <Note\n      key={note.id}\n      note={note}\n      toggleImportance={() => toggleImportanceOf(note.id)}\n    />\n  )\n  \n  const handleNoteChange = (event) => {\n    setNewNote(event.target.value)\n  }\n\n  const addNote = (event) => {\n    event.preventDefault()\n    const noteObject = {\n      content: newNote,\n      date: new Date().toISOString(),\n      important: Math.random() > 0.5,\n      id: notes.length + 1,\n    }\n\n    noteService\n      .create(noteObject)\n      .then(data => {\n        setNotes(notes.concat(data))\n        setNewNote('')\n      })\n  }\n\n  const toggleImportanceOf = id => {\n    const note = notes.find(n => n.id === id)\n    const changedNote = { ...note, important: !note.important }\n\n    noteService\n      .update(id, changedNote)\n      .then(returnedNote => {\n        setNotes(notes.map(note => note.id !== id ? note : returnedNote))\n      })\n      .catch(error => {\n        setErrorMessage(\n          `note ${note.content} was already removed from the server`\n        )\n        setTimeout(()=> {\n          setErrorMessage(null)\n        },5000)\n        setNotes(notes.filter(n => n.id !== id))\n      })\n      \n  }\n\n  return (\n    <div>\n      <h1>Notes</h1>\n      <Notification message={errorMessage}/>\n      <div>\n        <button onClick={() => setShowAll(!showAll)}>\n          show {showAll ? 'important' : 'all'}\n        </button>\n      </div>\n      <ul>\n        {rows()}\n      </ul>\n      <form onSubmit={addNote}>\n        <input\n          value={newNote} \n          onChange={handleNoteChange}\n        />\n        <button type=\"submit\">save</button>\n      </form>\n      <Footer/>\n    </div>\n  )\n}\n\nexport default App ","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App' \nimport './index.css'\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root')\n)"],"sourceRoot":""}